(1)  What are the benefits of using CSS?

ans:-Cascading Style Sheets (CSS): CSS is defined as a method sheet language that provides web designers control over how an internet site communicates with web browsers including the formatting and display of their HTML documents.

CSS or cascading sheet may be a text-based coding language that specifies the website formats and the way a site communicates with web browsers. The language allows web developers to regulate various style elements and functionalities, like layout, color, fonts, and therefore the formatting and display of HTML documents.

The main goal (as a method sheet language) was to separate document content from document presentation, which incorporates style elements, like color, layout, and fonts. CSS handles the design and feel a part of an internet page. Using CSS, you will control the color of the text, the design of fonts, the spacing between paragraphs, how columns are sized and laid out, etc.

CSS instructs the display of the HTML on how the web site will display at the user’s end. Let us have a glance on the benefits and drawbacks of CSS.





(2)  What are the disadvantages of CSS?
ans:-1. Confusion due to many CSS levels
Beginners are more vulnerable to this issue. They might get confused while opting to learn CSS as there are many levels of CSS such as CSS2, CSS3, etc.

2. Cross-Browser Issues
Different browsers work differently. So, you have to check that changes implemented in the website via CSS codes are reflected properly among all browsers.

3. Security Issues
Security is important in today’s world driven by technology and data. One of the major disadvantages of CSS is that it has limited security.

4. Extra Work for Developers
Design services are required to consider and test all CSS codes across different browsers for compatibility. Due to developers testing compatibility for different browsers, their workload increases.

Overall, we can say that if you are passionate about web development, try to learn HTML and CSS. For device compatibility, learn the Bootstrap framework as well. Though you might see some disadvantages of CSS, many advantages counter them and ensure that your web development process is smooth and efficient.

Recommended list for brushing up your tech basics:

Basics of web development: Advantages and Disadvantages of HTML
Advantages and disadvantages of distributed systems that you must know!
Guide 101: DBMS advantages and disadvantages, applications and top resources for preparation
A quick brush up on the advantages and disadvantages of Linked Lists!
101 lessons: An Introduction to Algorithm and its bunch of characteristics









(3)  What is the difference between CSS2 and CSS3?
ans:- Parameters

CSS

CSS2

CSS3

Released In

1996

1998

1999

Specification 

Single Document

Single Document

Divided into individual modules

Styling Option

Limited

More than CSS

Large, along with the support for animations

Fonts

Web-safe fonts

Web-safe fonts

Special fonts analogous to Google Fonts and Typecast

Selectors

Simple selectors

Simple selectors

A sequence of simple selectors

Rounded Borders

No 

No 

Yes

Split Text Feature

No 

No 

Yes

Grid System and Template Layout 

No

No

Yes









(4) Name a few CSS style components.
ans:- Introduction To CSS
Cascading Style Sheets, better known as CSS, is a very simple process to make web pages much more presentable. CSS allows you to put styles to customize your web pages. The best part about using this styling feature is that the CSS is independent of the HTML way of creating web pages. The Hypertext Markup Language and the Cascading Style Sheets have a basic difference. CSS primarily structures the web page’s landscape while offering powerful color coding and styling techniques. It actively controls the layout of more than one web page simultaneously. All the CSS files store the external stylesheets.

Main Components of CSS
In the Above Section, we have studied Introduction to CSS, So now we are going ahead with the main components of CSS as below:

1. Easily maintainable: If you are intended to make any global change, change the styling, and you can see all other elements in all other web pages getting automatically updated.

2. CSS is time-saving: You can write the script once and reuse the same sheet as much time as you want.

LINUX Course Bundle - 19 Courses in 1 | 3 Mock Tests

204+ Hours of HD Videos | 19 Courses | 3 Mock Tests & Quizzes | Verifiable Certificate of Completion | Lifetime Access
4.5
3. Superior styles to the native front end: CSS has a much wider array of attributes and lists than HTML. Therefore the HTML page can have a brighter look and feel than the normal HTML attributes.

4. Ease with Search Engines: CSS is a convenient and easy-to-read styling sheet. This means that search engines don’t have to put in much effort trying to read the text.

5. Efficient cache storing: CSS can store web applications locally with the help of an offline cache mechanism that can be used to view offline websites.

Characteristics of CSS
SERVICENOW Course Bundle - 2 Courses in 1

28+ Hours of HD Videos | 2 Courses | Verifiable Certificate of Completion | Lifetime Access
4.5
As we discussed the introduction to CSS and Its component. Now we are going to learn about the characteristics of CSS. The client browser interprets and applies styling rules to various elements in your document, which are among the major characteristics of CSS. Major characteristics include:

A style rule consists of a selector component and a declaration block component.
The selector points to the HTML component that you want to style.
The declaration block contains one or more declarations, along with semicolons.
Every declaration has a CSS property name, a semicolon, and a value. For example, the color is the property, and the value is red. Font size is the property, and the 15px is the value.
CSS declaration ends with a semicolon, and curly braces surround these blocks.
CSS selectors are the ones that are used to find HTML elements that are based on the element name, id, attribute, class, and more.
The ID of an element will select a unique component.
If you wish to select a particular element with a specific id, the # function, and the id attribute should be used.
If you wish to select the elements with a specific class, the period character and the name class should be written.
Universal selector: If you do not wish to select elements of a particular type, you can use the universal selector, which matches the element name.
Element selector: These selectors choose the element based on the element name.
Descendent selector: The descendent selector refers to a situation where a particular element is inside another.
ID selector: This selector uses the id of the HTML element to select a specific element.
Class selectors: It selects the element with a specific class attribute.
Grouping selectors: It will be a good option to group the selectors to minimize the code. Each selector and a comma should be used to group the selectors.
Applications of CSS
After learning the Introduction to CSS and the characteristics of CSS, we are going to learn the application of CSS. There are three ways of HTML accessing CSS:

1. Inline
An inline style sheet only affects the tag it is in. This essentially means that you can change the small details on the page without altering the overall layout or everything on the page. This is advantageous as if you had everything on the external pages. In that case, you must add additional tags to modify the details. Inline overrules external, which means that the small details can be changed. It also overrules the internal.

2. Internal
Web developers typically utilize internal styling to make small changes within a single tag. Inline styling affects only the specific tag to which it is applied, while internal styling is placed within the head of the HTML document. This means that if you wish to customize the page, all the required changes would be seen by just scrolling. The internal styling is placed inside the tags. Comparatively, this looks neater, simple, elegant, and organized because of the separate styling and tagging.

UBUNTU Course Bundle - 12 Courses in 1

32+ Hours of HD Videos | 12 Courses | Verifiable Certificate of Completion | Lifetime Access
4.5
3. External
External stylesheets allow people to format and recreate their web pages on different documents. This effectively means you can have two or more workplaces, as more than one stylesheet can be embedded inside the document, providing you with a much cleaner workspace. In this case, the external stylesheet’s easy accessibility provides a significant advantage. However, it’s important to note that any changes to the external sheet would impact all the parent sheets it is linked to.

Advantages And Disadvantages Of CSS
Below are the advantages and disadvantages:

Advantages
Below are the advantages:

Device Compatibility
Faster website speed
Easily maintainable
Consistent and spontaneous changes
Ability to re-position
Enhances search engine capabilities to crawl the web pages
Disadvantages
Below are the disadvantages:

VB.NET Course Bundle - 33 Courses in 1 | 9 Mock Tests

132+ Hours of HD Videos | 33 Courses | 9 Mock Tests & Quizzes | Verifiable Certificate of Completion | Lifetime Access
4.5
Cross-browser related issues
Vulnerable
Issues due to multiple levels
Lack of security
Fragmentation
Conclusion
CSS empowers the web designer to apply extensive changes to the web layout of all pages within a single website using a single file. It helps design a light and creative website with high responsiveness, which impresses the audience when displayed. Therefore, it is an integral part of today’s websites that should not be overlooked.

Recommended Articles
We hope that this EDUCBA information on “Introduction to CSS” was beneficial to you. You can view EDUCBA’s recommended articles for more information.

CSS Interview Questions
Pseudo Elements in CSS
CSS text-indent
CSS Not Selector.







(5)  What do you understand by CSS opacity?
ans:- The CSS opacity property is used to specify the transparency of an element. In simple word, you can say that it specifies the clarity of the image.

In technical terms, Opacity is defined as degree in which light is allowed to travel through an object.

Opacity setting is applied uniformly across the entire object and the opacity value is defined in term of digital value less than 1. The lesser opacity value displays the greater opacity. Opacity is not inherited.







(6)  How can the background color of an element be changed? 
ans:- HTML Background Color
In HTML and CSS, background color is denoted by the background-color property.  To add or change background color in HTML, simply add inline CSS to your code. Here's an example: 

<body style="background-color:#33475b">
In the past, you could use the bgcolor attribute to change the background color of a page or element.

Say you wanted to change the background color of a web page to maroon. You would have simply added the bgcolor attribute in the opening body tag and set it to the hex color code #800000, as shown below.

<body bgcolor="#800000">
However, this attribute has been deprecated in the latest version of HTML and replaced by a much better alternative, the CSS background-color property. Using this property, you can add and change background colors on your website.

Below, we cover a tutorial in more detail. 

How to Add Background Color in HTML
To add background color in HTML, use the CSS background-color property. Set it to the color name or code you want and place it inside a style attribute. Then add this style attribute to an HTML element, like a table, heading, div, or span tag.

Adding a background color can help a certain element stand out on the page, making it more readable.

We’ll walk through this process step-by-step. For this tutorial, we’ll make a table in HTML as an example.

1. Identify the HTML element you’d like to add a background to or create one.
Scan your HTML code to pinpoint which element you’d like to change. If it’s the header, look for the <header> opening tag. If it’s a div, look for the <div> tag.

In this example, we’re creating a table with the <table> tag.

2. Choose an HTML background color.
You have plenty of HTML color codes to choose from. For this example, we’ll make the color #33475b.

 

 

3. Add a style attribute to the opening tag.
Next, add the style attribute to the opening tag of your element. For this tutorial, only the background color of this specific table will change. The change will not affect any other element on the page.

Here’s the HTML with inline CSS:

<table style="background-color:#33475b">
<tr>
<th>Name</th>
<th>Job Title</th>
<th>Email address</th>
</tr>
<tr>
<td>Anna Fitzgerald</td>
<td>Staff Writer</td>
<td>example@company.com</td>
</tr>
<tr>
<td>John Smith</td>
<td>Marketing Manager</td>
<td>example2@company.com</td>
</tr>
<tr>
<td>Zendaya Grace</td>
<td>CEO</td>
<td>example2@company.com</td>
</tr>
</table>
HTML table with a navy background color and white font color
That’s simple. Now let’s look at what to do if you want to set the background color of multiple elements on a page.

How to Change Background Color in HTML
Let’s say you set the background color of your entire web page to one color and want to change the background color of a specific element to another color. The good news is the process for changing the background color of an element is nearly identical to the process for adding it.

You can use inline CSS to do this, but we’ll use multiple styles of CSS in the example below. Let’s walk through this process step-by-step.

1. Find the “body” CSS selector.
Rather than add this CSS in the body tag of the HTML file, we’ll add it using the body CSS selector. Find it in your website’s CSS code.

2. Change the background color of the body.
Next, we’ll change the background color of the entire web page using the background-color property.

Here’s the CSS:

body {
background-color: #DBF9FC;
}
Here’s the result:

Page with light aqua background color and a table with the default transparent background  
Try It Yourself!
The code module below is editable. Toggle between the HTML and CSS tabs, edit the code, and click rerun in the bottom right-hand corner.


If this was the only CSS, then everything on the page would have the same light blue background. Next, we'll add inline CSS to change the background color of the table.

3. Add inline CSS to change the background color of specific elements.
If we want to change the background color of the table, we can use inline CSS to target that single element.

Here’s the opening tag with inline CSS:

<table style="background-color:#33475b">
Here’s the result:

Web page with a light aqua background color and a navy blue table

Try It Yourself!
The code module below is editable. Toggle between the HTML and CSS tabs, edit the code, and click rerun in the bottom right-hand corner.


 


Free Guide: 25 HTML & CSS Coding Hacks
Tangible tips and coding templates from experts to help you code better and faster.

Coding to Convention
Being Browser-Friendly
Minimizing Bugs
Optimizing Performance
Download for free
Learn more
How to Change a Div Background Color
A div is a container element that’s commonly used to designate different sections of a webpage.

Changing the background color of a div is identical to changing the background color of your web page’s body.

Usually, a web page will have many divs. In this tutorial, we’ll teach you how to change one div only.

Let’s go through the process step-by-step.

1. Add a CSS class to the div you’d like to change.
First, find the div in your HTML code and add a class to the opening tag. Adding a class to an element will allow you to change that element only.

Here’s what that looks like:

<div class=”example”>This is a div on a webpage. </div>
2. Add the new class selector to your CSS code.
Next, head over to your CSS code and add your new class selector. Within the brackets, include the background-color property.

Here’s what that looks like:

.example {
background-color: ;
}
3. Choose a new background color.
Next, choose a CSS background color for your background-color property. We chose rgb(255, 122, 89).

Here’s what that code looks like:

.example {
background-color: rgb(255, 122, 89);
}
Here’s the result:

Image showing two divs with different background colors

All done! You’ve changed the background of a div on your web page.







(7) How can image repetition of the backup be controlled? 
ans:- In this article, we will see how an image repetition of the backup is controlled in CSS. This task can be achieved by using the background-repeat property that will help us to control the repetition of the image.

The background-repeat property in CSS is used to repeat the background image both horizontally and vertically. It also decides whether the background image will be repeated or not.

Syntax:

background-repeat: repeat|repeat-x|repeat-y|no-repeat|initial|inherit;
Example 1: In the example, we will make use of the repeat-x to repeat the image in the horizontal direction.



<!DOCTYPE html>
<html>
 
<head>
    <title>background-repeat property</title>
    <style>
        body {
            margin-top: 40px;
            background-image: url(
"https://media.geeksforgeeks.org/wp-content/uploads/geeks-25.png");
            background-repeat: repeat-x;
            background-size: 150px 100px;
        }
         
        h1 {
            text-align: center
        }
    </style>
</head>
 
<body>
    <h1>GeeksforGeeks</h1>
</body>
</html>
Output:


 






(8)  What is the use of the background-position property?
ans:- CSS: background-position property
This CSS tutorial explains how to use the CSS property called background-position property with syntax and examples.

Description
The CSS background-position property defines the initial position of the background-image for an element.

Syntax
The syntax for the background-position CSS property is:

background-position: horizontal_value [vertical_value];
Parameters or Arguments
horizontal_value
Defines the horizontal position of the background-image. It can be one of the following:

Value	Description
fixed	Fixed value expressed in px, em, ...
div { background-image: url("logo.png"); background-position: 0px 10px; }
percentage	Percentage value
div { background-image: url("logo.png"); background-position: 25% 50%; }
left	Image is horizontally aligned to the left. Equivalent to 0% for the horizontal position
div { background-image: url("logo.png"); background-position: left top; }
center	Image is horizontally centered. Equivalent to 50% for the horizontal position
div { background-image: url("logo.png"); background-position: center top; }
right	Image is horizontally aligned to the right. Equivalent to 100% for the horizontal position
div { background-image: url("logo.png"); background-position: right top; }
inherit	Element will inherit the background-position from its parent element
div { background-image: url("logo.png"); background-position: inherit; }
vertical_value
Optional. It defines the vertical position of the background-image. It can be one of the following:

Value	Description
fixed	Fixed value expressed in px, em, ...
div { background-image: url("logo.png"); background-position: 25px 30px; }
percentage	Percentage value
div { background-image: url("logo.png"); background-position: 10% 25%; }
top	Image is vertically aligned to the top. Equivalent to 0% for the vertical position
div { background-image: url("logo.png"); background-position: left top; }
center	Image is vertically centered. Equivalent to 50% for the vertical position
div { background-image: url("logo.png"); background-position: left center; }
bottom	Image is vertically aligned to the bottom. Equivalent to 100% for the vertical position
div { background-image: url("logo.png"); background-position: left bottom; }
inherit	Element will inherit the background-position from its parent element
div { background-image: url("logo.png"); background-position: inherit; }
Note
The first value represents the horizontal position of the background-image and the second value represents the vertical position of the background-image.
If no vertical_value is provided, the CSS background-position property will assume that the vertical_value is center.
Browser Compatibility
The CSS background-position property has basic support with the following browsers:

Chrome
Firefox (Gecko)
Internet Explorer (IE)
Opera
Safari (WebKit)
Example
We will discuss the background-position property below, exploring examples of how to use this property in CSS.

Using Fixed
Let's look at a CSS background-position example where we use a fixed value.

div { background-image: url("/images/logo.png"); 
      background-position: 0px 45px; }
In this CSS background-position example, we have set a background-image for the <div> tag using the logo.png file. Then we have set the image to be horizontally positioned at 0px and vertically positioned at 45px.

It is also wise when setting a background-image to also set a background-color, in case the image is not available. Let's modify our example to add a background-color of black.

div { background-color: black; 
      background-image: url("/images/logo.png"); 
      background-position: 0px 45px; }
Now if the logo.png image is not available, the <div> will still display a black background-color.

Using Percentage
Let's look at a CSS background-position example where we use a percentage value.

div { background-color: white;
      background-image: url("/images/logo2.png");
      background-position: 50% 50%; }
In this CSS background-position example, we have set a background-image for the <div> tag using the logo2.png file. Then we have set the image to be horizontally positioned at 50% (ie: centered) and vertically positioned at 50% (ie: centered). If the logo2.png image is not available, the <div> will still display a white background-color.

Using Keyword
Let's look at a CSS background-position example where we use a keyword value (ie: center, top, bottom, left, right).

div { background-color: blue;
      background-image: url("/images/logo3.png");
      background-position: left top; }
In this CSS background-position example, we have set a background-image for the <div> tag using the logo3.png file. Then we have set the image to be horizontally left-aligned and vertically top-aligned. If the logo3.png image is not available, the <div> will still display a blue background-color.







(9)  Which property controls the image scroll in the background? 
ans:- The background-attachment property sets whether a background image scrolls with the rest of the page, or is fixed.
Example
A background-image that will not scroll with the page (fixed):

body {
  background-image: url("img_tree.gif");
  background-repeat: no-repeat;
  background-attachment: fixed;
}
More "Try it Yourself" examples below.

Definition and Usage
The background-attachment property sets whether a background image scrolls with the rest of the page, or is fixed.

Default value:	scroll
Inherited:	no
Animatable:	no. Read about animatable
Version:	CSS1
JavaScript syntax:	object.style.backgroundAttachment="fixed"
Browser Support
The numbers in the table specify the first browser version that fully supports the property.

Property					
background-attachment	1.0	4.0	1.0	1.0	3.5
ADVERTISEMENT

CSS Syntax
background-attachment: scroll|fixed|local|initial|inherit;
Property Values
Value	Description
scroll	The background image will scroll with the page. This is default
fixed	The background image will not scroll with the page
local	The background image will scroll with the element's contents
initial	Sets this property to its default value. Read about initial
inherit	Inherits this property from its parent element. Read about inherit










(10)  Why should background and color be used as separate properties? 
ans:- There are two reasons behind this:

It enhances the legibility of style sheets. The background property is a complex property in CSS, and if it is combined with color, the complexity will further increase.
Color is an inherited property while the background is not. So this can make confusion further.










(11) How to center block elements using CSS1? 
ans:-To centrally align the block elements, we can simply make use of the <center> tag. All the elements within the <center> tag will be centrally aligned.
There are two ways of centering block level elements: 1. By setting the properties margin-left and margin-right to auto and width to some explicit value: BODY {width: 30em; background: cyan;} P {width: 22em; margin-left: auto; margin-right: auto} In this case, the left and right margins will each be four ems wide, since they equally split up the eight ems left over from (30em - 22em). Note that it was not necessary to set an explicit width for the BODY element; it was done here to keep the math clean. Another example: TABLE {margin-left: auto; margin-right: auto; width: 400px;} In most legacy browsers, a table's width is by default determined by its content. In CSS-conformant browsers, the complete width of any element (including tables) defaults to the full width of its parent element's content area. As browser become more conformant, authors will need to be aware of the potential impact on their designs. If background and color should always be set together, why do they exist as separate properties? There are several reasons for this. First, style sheets become more legible -- both for humans and machines. The background property is already the most complex property in CSS1 and combining it with color would make it even more complex. Second, color inherits, but background doesn't and this would be a source of confusion.













(12) How to maintain the CSS specifications? 
ans:- CSS SPEC­I­FI­CA­TIONS
This page contains descriptions of all specifications that the CSS WG is working on. See the ‘current work’ page for a compact view and how to give feedback.

MEDIA QUERIES
History
Tests
Media Queries is an enhancement of the @media rules of CSS and the “media” attribute in HTML. It adds parameters such as size of display, color depth and aspect ratio. This is because within a class of media (such as TV sets) there can still be important variations. It is related to the work on CC/PP, but is a much more light-weight and limited solution.

Editors: Florian Rivoal, Håkon Wium Lie, Tantek Çelik, Daniel Glazman, Anne van Kesteren

MEDIA QUERIES LEVEL 4
History
Media Queries defines a syntax for short expressions that describe required features of media (or devices), e.g.: minimum or maximum screen size, color capabilities, resolution, aspect ratio, type of pointing device, viewing environment, scripting capabilities, etc. Media Queries is related to the work on CC/PP, but is a more light-weight and limited solution.

Such expressions can be attached as labels to style sheets or other resources, to indicate what media they are designed for. They are used, e.g., in HTML (in the media attribute). CSS uses them on '@import' and '@media' and they occur in similar ways in SVG and generic XML.

Media Queries level 4 is an extended version of the first Media Queries. It adds a handful of new media features, such as 'pointer' and 'hover' (for capabilities of the pointing device) and 'block-overflow' (for paged vs scrolling media), which provide more precise information about the media than the old 'handheld' vs 'screen' and 'projection' vs 'screen' distinctions.

Editors: Florian Rivoal, Tab Atkins Jr.

SELECTORS LEVEL 3
History
Tests
Selectors describes the element selectors used in CSS and some other technologies. Selectors are used to select elements in an HTML or XML document, in order to attach (style) properties to them. Elements can be selected based on their name, attributes, context, and other aspects.

Editors: Tantek Çelik, Elika J. Etemad, Daniel Glazman, Ian Hickson, Peter Linss, John Williams

SELECTORS LEVEL 4
History
Selectors Level 4 extends level 3 with new ways to select elements. based, e.g., on what they contain or on what follows.

Editors: Elika J. Etemad, Tab Atkins Jr.

CSS 2.1
History
Tests
CSS Level 2 Revision 1 corrects errors in the 1998 Recommendation of CSS level 2 and adds a select few highly requested features originally planned for level 3, which have already been widely implemented. But most of all CSS 2.1 represents a ‘snapshot’ of CSS usage: it consists of all CSS features that are implemented interoperably for HTML and XML at the date of publication of the Recommendation.

Editors: Bert Bos, Tantek Çelik, Ian Hickson, Håkon Wium Lie

PREVIEW OF CSS 2.2
History
Preview of CSS Level 2 shows how CSS2 looks with the proposed errata applied and redundant text replaced by references to other CSS modules. It is not a specification itself, but a candidate for the next (i.e., 2nd) revision of CSS level 2.

Editors: Bert Bos

CSS SNAPSHOT 2007
History
CSS Snapshot 2007 links to all the specifications that together represent the state of CSS as of 2006. Because large parts of CSS are still under development and it is often difficult to know what their state is, the CSS working group decided to publish this document, which contains only the parts of CSS that are stable and have been shown to work.

Editors: Elika J. Etemad

CSS SNAPSHOT 2010
History
CSS Snapshot 2010 links to all the specifications that together represent the state of CSS as of 2010. With this document, the CSS WG aims to help implementors distinguish between the parts of CSS that are ready for production and the parts that are still experimental.

Editors: Elika J. Etemad

CSS SNAPSHOT 2015
History
CSS Snapshot 2015 links to all the specifications that together represent the state of CSS as of 2015. With this document, the CSS WG aims to help implementors distinguish between the parts of CSS that are ready for production and the parts that are still experimental.

This Note also includes best practices for experimental and partial implementations, including rules for so-called ‘vendor prefixes’ on proprietary and unstable features.

Editors: Elika J. Etemad

CSS SNAPSHOT 2017
History
CSS Snapshot 2017 links to all the specifications that together represent the state of CSS as of 2017. It is the successor to the similar snapshots for 2015, 2010 and 2007. With this document, the CSS WG aims to help implementors distinguish between the parts of CSS that are ready for production and the parts that are still experimental.

The Note also defines best practices for experimental and partial implementations, including rules for so-called ‘vendor prefixes’ on proprietary and unstable features.

Editors: Tab Atkins Jr., Elika J. Etemad / fantasai, Florian Rivoal

CSS SNAPSHOT 2018
History
CSS Snapshot 2018 links to all the specifications that together represent the state of CSS as of 2018. It is the successor to the similar snapshots for 2017, 2015, 2010 and 2007. With this document, the CSS WG aims to help implementors distinguish between the parts of CSS that are ready for production and the parts that are still experimental.

The Note also defines best practices for experimental and partial implementations, including rules for so-called ‘vendor prefixes’ on proprietary and unstable features.

Editors: Tab Atkins Jr., Elika J. Etemad / fantasai, Florian Rivoal

CSS SNAPSHOT 2020
History
CSS Snapshot 2020 links to all the specifications that together represent the state of CSS as of 2020. It is the successor to the similar snapshots for 2018, 2017, 2015, 2010 and 2007. With this document, the CSS WG aims to help implementors distinguish between the parts of CSS that are ready for production and the parts that are still experimental.

The Note also defines best practices for experimental and partial implementations, including rules for so-called ‘vendor prefixes’ on proprietary and unstable features.

Editors: Tab Atkins Jr., Elika J. Etemad / fantasai, Florian Rivoal

CSS SNAPSHOT 2021
History
CSS Snapshot 2021 links to all the specifications that together represent the state of CSS as of 2021. It is the successor to the similar snapshots for 2020, 2018, 2017, 2015, 2010 and 2007. With this document, the CSS WG aims to help implementors distinguish between the parts of CSS that are ready for production and the parts that are still experimental.

The Note also defines best practices for experimental and partial implementations, including rules for so-called ‘vendor prefixes’ on proprietary and unstable features.

Editors: Tab Atkins Jr., Elika J. Etemad / fantasai, Florian Rivoal

CSS SNAPSHOT 2022
History
CSS Snapshot 2022 links to all the specifications that together represent the state of CSS as of 2021. It is the successor to the similar snapshots for 2021, 2020, 2018, 2017, 2015, 2010 and 2007. With this document, the CSS WG aims to help implementors distinguish between the parts of CSS that are ready for production and the parts that are still experimental.

The Note also defines best practices for experimental and partial implementations, including rules for so-called ‘vendor prefixes’ on proprietary and unstable features.

Editors: Tab Atkins Jr., Elika J. Etemad / fantasai, Florian Rivoal

CSS SNAPSHOT 2023
History
CSS Snapshot 2023 links to all the specifications that together represent the state of CSS as of 2022. It is the successor to the similar snapshots for 2022, 2021, 2020, 2018, 2017, 2015, 2010 and 2007. With this document, the CSS WG aims to help implementors distinguish between the parts of CSS that are ready for production and the parts that are still experimental.

The Note also defines best practices for experimental and partial implementations, including rules for so-called ‘vendor prefixes’ on proprietary and unstable features.

Editors: Tab Atkins Jr., Elika J. Etemad / fantasai, Florian Rivoal, Chris Lilley.









(13)  What are the ways to integrate CSS as a web page?
ans:- Inline - by using the style attribute inside HTML elements.
Internal - by using a <style> element in the <head> section.
External - by using a <link> element to link to an external CSS file.
Using CSS
CSS can be added to HTML documents in 3 ways:

Inline - by using the style attribute inside HTML elements
Internal - by using a <style> element in the <head> section
External - by using a <link> element to link to an external CSS file
The most common way to add CSS, is to keep the styles in external CSS files. However, in this tutorial we will use inline and internal styles, because this is easier to demonstrate, and easier for you to try it yourself.

An inline CSS is used to apply a unique style to a single HTML element.

An inline CSS uses the style attribute of an HTML element.

The following example sets the text color of the <h1> element to blue, and the text color of the <p> element to red:

Internal CSS
An internal CSS is used to define a style for a single HTML page.

An internal CSS is defined in the <head> section of an HTML page, within a <style> element.

The following example sets the text color of ALL the <h1> elements (on that page) to blue, and the text color of ALL the <p> elements to red. In addition, the page will be displayed with a "powderblue" background color: 

Example

An external style sheet is used to define the style for many HTML pages.

To use an external style sheet, add a link to it in the <head> section of each HTML page:









(14) • What is embedded style sheets?
ans:- An embedded style sheet is declared within the <head> element of an XHTML document. It applies to the whole document, rather than just one element. Each style declaration (or CSS rule) gets applied to everything in the document that matches that rule. Each rule has 2 parts: the element the rule applies to and the rule itself within curly braces {}. Look at the source of this page for more details.

This document has an embedded style sheet rule for all paragraph elements that defines the font-color as blue. It also has the same in-line style declarations that were included in the file style1-inline.html

This paragraph has an inline style declaration in its opening <p> tag that causes the paragraph to be printed in green and in italics.

This paragraph has no inline style delclaration in its opening <p> tag.

To apply a style to just part of a paragraph rather than the whole paragraph, the <span> tag is often used. The <span> tag is just used for grouping (like parentheses in a mathematical formula) and carries no meaning. Putting <span> tags around part of a paragraph allows you to apply an inline style to just that section of text between the <span> and </span> tags.

Look at the source code of this page (styles1-inline.html) and answer the following questions:

2. What happens when styles from in-line styles conflict with those from embedded style sheets?

A style can also be declared for only a certain class of instances of an element. For example, this paragraph is tagged as being a paragraph of the class special. A rule in the embedded style sheet for this document applies only to paragraphs of class special - it says to display them in a purple font color.

3. Which style won out in determining how the previous paragraph was displayed? The style declared for all paragraphs, or the style for "special" paragraphs?

4. How are classes identified in an embedded style sheet? How is a class identified within a markup tag within the body of the document?

This is a "special" paragraph, with a very special phrase within it.

This level 4 heading and the following paragraph are both within a <div> element that has the class attribute of "veryspecial." The <div> tag is like the <span> tag, except it can be used to group large sections that contain multiple paragraph elements, etc.
This is a "special" paragraph, with a very special phrase within it.

5. Does the order in which the styles are declared in the head of the document affect which one gets applied when they conflict? Copy this page (styles2-embedded.html) to you public_html directory and change the order of the styles to determine the answer.

6. The CSS (Cascading Style Sheet) specification says that when two or more conflicting styles are applied to the same element, the style with the greatest specificity is the one that wins out. From the examples on this page, what would you conclude about how "specificity" is determined? In other words, can you draw any conclusions about what styles have greater specificity than others?










(15)  What are the external style sheets?
ans:- An external style sheet is a separate CSS file that can be accessed by creating a link within the head section of the webpage. Multiple webpages can use the same link to access the stylesheet. The link to an external style sheet is placed within the head section of the page.










(16)  What are the advantages and disadvantages of using external style sheets? 
ans:- The Advantages And Disadvantages Of External CSS Files
Lorraine
February 3, 2023
Front-End Development

Bootstrap is a free and open-source front-end web framework for designing websites and web applications. It contains HTML- and CSS-based design templates for typography, forms, buttons, navigation, and other interface components, as well as optional JavaScript extensions. External CSS is a file that contains only CSS code and is saved with a “.css” extension. External CSS files are referenced with a tag in the HTML document, and can be used to style any HTML element. Bootstrap is a popular front-end framework that provides pre-built CSS and JavaScript components for web development. While Bootstrap is great for quickly prototyping and building out simple websites, it is not intended for use on large, complex websites. For such sites, it is recommended to use an external CSS file. External CSS files have the advantage of being able to be cached by the browser, which can lead to faster page loading times. They also make it easier to maintain and update the CSS code for a website, as all of the CSS code can be contained in a single file. However, there are some disadvantages to using external CSS files. For one, they can increase the number of HTTP requests that a browser has to make to load a page, which can lead to longer page-loading times. Additionally, if the CSS code in an external file is not well-organized, it can be difficult to read and maintain.

External CSS can be linked using Bootstrap Studio if it is hosted outside of the website. You can link external CSS to the Styles group by right-clicking on it and selecting Link External CSS. When you click the link in the dialog box, your stylesheet will be added to the design as an external stylesheet.

When you use CSS, you can override this. Even though it’s fine, Bootstrap’s built-in CSS is frequently more specific than yours, so the browser will default to Bootstrap over your. Make certain that your CSS is at least as specific as Bootstrap.

You’ll need to include Bootstrap scripts and stylesheets on your page, as well as custom classes for your HTML elements, in order to use it. HTML, CSS, and JavaScript are all important elements of the framework.

Is Css And Bootstrap Are Same?
Is Css And Bootstrap Are Same?
Image by: hubspot.com

Free, front-end development frameworks such as CSS and Bootstrap are designed to make website creation easier and faster for developers. The W3 is the most significant distinction. The less popular of the two frameworks is Bootstrap, which uses CSS and JavaScript more than CSS and JavaScript.

The World Wide Web is made up of a number of websites. Web pages are written in HTML, CSS, and JavaScript, the three primary programming languages. Front-end web development with Bootstrap is quick and simple. A simple design language such as CSS makes it easier for a web page to appear more appealing. Front-end frameworks such as Bootstrap are free and open source. A style sheet language is a markup language that describes the presentation of a document written in a markup language, such as HTML. They are used to add images to web pages, such as background and border effects, text effects, 2D and 3D animations, and so on.

When using Bootstrap, you must be familiar with the grid system, which is based on the CSS box model. Bootstrap also provides a number of useful classes that make the development process easier. The Bootstrap framework is useful in general, but it will take some time to learn HTML and CSS.








(17)  What is the meaning of the CSS selector?
ans:- CSS selectors are used to "find" (or select) the HTML elements you want to style. We can divide CSS selectors into five categories: Simple selectors (select elements based on name, id, class) Combinator selectors (select elements based on a specific relationship between them).












(18)  What are the media types allowed by CSS?
ans:- CSS2 Introduced Media Types
The @media rule, introduced in CSS2, made it possible to define different style rules for different media types.

Examples: You could have one set of style rules for computer screens, one for printers, one for handheld devices, one for television-type devices, and so on.

Unfortunately these media types never got a lot of support by devices, other than the print media type.

CSS3 Introduced Media Queries
Media queries in CSS3 extended the CSS2 media types idea: Instead of looking for a type of device, they look at the capability of the device.

Media queries can be used to check many things, such as:

width and height of the viewport
width and height of the device
orientation (is the tablet/phone in landscape or portrait mode?)
resolution
Using media queries are a popular technique for delivering a tailored style sheet to desktops, laptops, tablets, and mobile phones (such as iPhone and Android phones).

Browser Support
The numbers in the table specifies the first browser version that fully supports the @media rule.

Property					
@media	21.0	9.0	3.5	4.0	9.0
Media Query Syntax
A media query consists of a media type and can contain one or more expressions, which resolve to either true or false.

@media not|only mediatype and (expressions) {
  CSS-Code;
}
The result of the query is true if the specified media type matches the type of device the document is being displayed on and all expressions in the media query are true. When a media query is true, the corresponding style sheet or style rules are applied, following the normal cascading rules.

Unless you use the not or only operators, the media type is optional and the all type will be implied.

You can also have different stylesheets for different media:

<link rel="stylesheet" media="mediatype and|not|only (expressions)" href="print.css">
ADVERTISEMENT

CSS3 Media Types
Value	Description
all	Used for all media type devices
print	Used for printers
screen	Used for computer screens, tablets, smart-phones etc.
speech	Used for screenreaders that "reads" the page out loud
Media Queries Simple Examples
One way to use media queries is to have an alternate CSS section right inside your style sheet.

The following example changes the background-color to lightgreen if the viewport is 480 pixels wide or wider (if the viewport is less than 480 pixels, the background-color will be pink):.











(19)  What is the rule set? 
ans:- Working with Rule Sets
Rule sets enable users to group related rules together to better organize the definition of calculation logic, to execute similar rules together, and to simplify the definition of rules that share common dimension members. Rule sets have a set order, determined by the rule set sequence number, and may also contain options specific to the execution of rules within that rule set. Rule sets apply to the specified POV.

Setting a rule set context enables you to define default definitions for dimensions that will be used in all rules included in the selected rule set for the selected POV.

The following topics describe how to create and manage rule sets and rule set contexts:

Defining Rule Sets

Managing Rule Sets

Defining and Managing Rule Set Contexts

For a tutorial about rule sets, see this video:
A ruleset is a collection of rules to be processed in a particular business case. It serves as an entry point for rule processing and can be used as an alternative to a top expression assigned to a function.

Features
Function Assignment
For a ruleset to be processed, a function has to be assigned to the ruleset. The mode of operation setting of the assigned function must be either Event Mode or Functional and Event Mode. A ruleset can be assigned to only one function, whereas one function may have any number of rulesets assigned.

Note Note

In the BRFplus workbench, the Where used function does not yield a result for rulesets. However, in the Ruleset Header section you can find out easily to which function a particular ruleset is assigned.

In previous releases of BRFplus, it was also possible to have each single rule assigned to a function as its trigger, rather than assigning the function to the ruleset. This is no longer supported. However, if you have legacy applications that make use of the individual assignment of rules and functions, the system is still able to process such rules.

Rule Assignment
The rules contained in a ruleset can be either named or unnamed:

Named rules are references to rule objects that you have defined in your BRFplus application. Such rules are stand-alone objects and can be reused by different rulesets.

Unnamed rules are defined in the scope of a particular ruleset and are not accessible for other objects. Unnamed rules may either contain a reference to a named rule or an immediate definition of the tasks to perform.





A ruleset is a collection of rules to be processed in a particular business case. It serves as an entry point for rule processing and can be used as an alternative to a top expression assigned to a function.


When you configure code analysis in Visual Studio, you can choose from a list of built-in rule sets. A rule set is a grouping of code analysis rules that identify targeted issues and specific conditions for that project. For example, you can apply a rule set that's designed to scan code for publicly available APIs. You can also apply a rule set that includes all the available rules.

You can customize a rule set by adding or deleting rules or by changing rule severities to appear as either warnings or errors in the Error List. Customized rule sets can fulfill a need for your particular development environment. When you customize a rule set, the rule set editor provides search and filtering tools to help you in the process.




